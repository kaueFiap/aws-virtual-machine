name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch: # Permite rodar manualmente o apply

env:
  TERRAFORM_VERSION: 1.12.2
  AWS_REGION: ${{ vars.AWS_REGION }}

jobs:
  test:
    name: Terraform Tests
    runs-on: ubuntu-latest

    steps:
      - name: Step 01 - Terraform Setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Step 02 - Checkout GitHub Repo
        uses: actions/checkout@v4

      - name: Step 03 - Authenticate with AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Step 04 - Terraform Init
        run: |
          terraform -chdir=terraform init \
            -backend-config="bucket=${{ vars.TF_STATE_BUCKET }}" \
            -backend-config="key=aws-virtual-machine/terraform.tfstate" \
            -backend-config="region=${{ vars.AWS_REGION }}" \
            -input=false

      - name: Step 05 - Terraform Validate
        run: terraform -chdir=terraform validate -no-color

      - name: Step 06 - Terraform Format Check
        run: terraform -chdir=terraform fmt -check -diff -recursive

      - name: Terraform Plan
        run: |
          terraform -chdir=terraform plan -out=tfplan \
            -var="region=${{ env.AWS_REGION }}" \
            -var="tf_state_bucket=${{ vars.TF_STATE_BUCKET }}"



      - name: Step 08 - Checkov Scan
        uses: bridgecrewio/checkov-action@master
        with:
          framework: terraform
          output_format: cli
          output_file_path: console
          soft_fail: true

  deploy:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Step 01 - Terraform Setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Step 02 - Checkout GitHub Repo
        uses: actions/checkout@v4

      - name: Step 03 - Authenticate with AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Step 04 - Terraform Init
        run: |
          terraform -chdir=terraform init \
            -backend-config="bucket=${{ vars.TF_STATE_BUCKET }}" \
            -backend-config="key=aws-virtual-machine/terraform.tfstate" \
            -backend-config="region=${{ vars.AWS_REGION }}" \
            -input=false

      - name: Step 05 - Terraform Plan
        run: terraform -chdir=./terraform plan -out=tfplan

      - name: Step 06 - Terraform Apply
        run: terraform -chdir=./terraform apply tfplan

      - name: Step 07 - Terraform Show
        run: terraform -chdir=./terraform show
